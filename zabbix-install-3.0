优化方面的参数不全面，是因为开启的虚拟机测试，生产中，搭建可以参考这里完全一样，优化方面需要修改

Nginx的：
1，[root @ localhost~] #mkdir / apps / svr / -p
2，[root @ localhost~] #yum install pcre pcre-devel openssl openssl-devel -y
3，[root @ localhost~] #useradd产品
4，[root @ localhost~] #tar zxvf nginx-1.8.0.tar.gz
5，[root @ localhost~] #cd nginx-1.8.0
6，[root @ localhost nginx-1.8.0]＃。/ configure --user = product --group = product --prefix = / apps / svr / nginx-1.8.0 --with-http_stub_status_module --with-http_ssl_module
7，[root @ localhost nginx-1.8.0] #make && make install
8，[root @ localhost conf] #cat nginx.conf
用户产品;
worker_processes 8;
worker_rlimit_nofile 65535;
error_log /apps/svr/nginx-1.8.0/logs/error.log;
pid /var/run/nginx.pid;
事件{
    使用epoll;
    worker_connections 65536;
}
http {
    include /apps/svr/nginx-1.8.0/conf/mime.types;
    default_type application / octet-stream;
    log_format main'$ remote_addr - $ remote_user [$ time_local]“$ request”'
                      '$ status $ body_bytes_sent“$ http_referer”'
                      '“$ http_user_agent”“$ http_x_forwarded_for”';
＃access_log /var/log/nginx/access.log main;
    ##大小限制
    client_body_buffer_size 512k;
    client_header_buffer_size 4k;
    client_max_body_size 80m;
    large_client_header_buffers 4 32k;
    ##超时
    client_body_timeout 60;
    client_header_timeout 60;
    keepalive_timeout 60;
    send_timeout 60;
    ＃＃ 常规选项
    ignore_invalid_headers on;
#limit_conn_zone $ binary_remote_addr zone = addr：10m;
    recursive_error_pages on;
    sendfile on;
#server_name_in_redirect off;
#server_tokens off;
    ## TCP选项
    tcp_nodelay on;
    tcp_nopush on;
服务器{
                听80;
                server_name localhost;
                地点 / {
                        root html;
                        index index.php index.html index.htm;
                }
                error_page 500 502 503 504 /50x.html;
                location = /50x.html {
                        root html;
                }
                位置〜\。（php | php5）？$ {
                        root /apps/svr/nginx-1.8.0/html;
                        fastcgi_pass 127.0.0.1:9000;
                        fastcgi_index index.php;
                        fastcgi_param SCRIPT_FILENAME /apps/svr/nginx-1.8.0/html$fastcgi_script_name;
                        包括fastcgi_params;
                        }
                }
}
9，[root @ localhost conf]＃/apps/svr/nginx-1.8.0/sbin/nginx -t
nginx：配置文件/apps/svr/nginx-1.8.0/conf/nginx.conf语法没问题
nginx：配置文件/apps/svr/nginx-1.8.0/conf/nginx.conf测试成功
10，[root @ localhost conf]＃/apps/svr/nginx-1.8.0/sbin/nginx
11，




Mysql的
（5.6版本也可以参考这个步骤，只是my.cnf中的拷贝路径有变化：
cp support-files / my-default.cnf /data/mysql-5.6.34/my.cnf）：

1，[root @ localhost~] #yum -y install ncurses-devel
2，[root @ localhost~] #mkdir /data/mysql-5.5.10/data -p
3，[root @ localhost~] #useradd mysql
4，[root @ localhost~] #tar zxvf cmake-2.8.4.tar.gz
5，[root @ localhost~] #cd cmake-2.8.4
6，[root @ localhost cmake-2.8.4]＃。/ configure && make && make install
7，[root @ localhost~] #tar zxvf mysql-5.5.10.tar.gz
8，[root @ localhost~] #cd mysql-5.5.10
9，[root @ localhost mysql-5.5.10] #cmake。-DCMAKE_INSTALL_PREFIX = / data / mysql-5.5.10 / -DSYSCONFDIR = / data / mysql-5.5.10 / -DMYSQL_DATADIR = / data / mysql-5.5.10 / data -DWITH_INNOBASE_STORAGE_ENGINE = 1 -DENABLED_LOCAL_INFILE = 1 -DMYSQL_TCP_PORT = 3306 - DCMAKE_THREAD_PREFER_PTHREAD = 1 -DEXTRA_CHARSETS = all -DDEFAULT_CHARSET = utf8 -DDEFAULT_COLLATION = utf8_general_ci -DMYSQL_UNIX_ADDR = / data / mysql-5.5.10 / mysql.sock -DWITH_DEBUG = 0
10，[root @ localhost mysql-5.5.10] #make && make install
11，[root @ localhost mysql-5.5.10] #rm -rf /etc/my.cnf
12，[root @ localhost mysql-5.5.10] #rm -rf /etc/init.d/mysqld
13，[root @ localhost mysql-5.5.10] #cp support-files / mysql.server /etc/init.d/mysqld
14，[root @ localhost mysql-5.5.10] #chmod 755 /etc/init.d/mysqld
15，[root @ localhost mysql-5.5.10] #cp support-files / my-medium.cnf /data/mysql-5.5.10/my.cnf
16，[root @ localhost mysql-5.5.10] #chown -R mysql.mysql /data/mysql-5.5.10/
17，[root @ localhost mysql-5.5.10] #export PATH = $ PATH：/data/mysql-5.5.10/bin/ >> / etc / profile
18，[root @ localhost mysql-5.5.10] #source / etc / profile
19，[root @ localhost mysql-5.5.10]＃/ data / mysql-5.5.10 / scripts / mysql_install_db --user = mysql --basedir = / data / mysql-5.5.10 / --datadir = / data /的MySQL-5.5.10 /数据/
20，[root @ localhost mysql-5.5.10] #grep'conf ='/ etc / init.d / mysqld
  CONF = /数据/ MySQL的-5.5.10 / my.cnf中
21，[root @ localhost~]＃/ etc / init.d / mysqld start
启动MySQL ..成功！
22，[root @ localhost~]＃ps -ef | grep mysql
root 25566 1 0 09:45 pts / 2 00:00:00 / bin / sh /data/mysql-5.5.10/bin/mysqld_safe --datadir = / data / mysql-5.5.10 / data --pid-file = /数据/ MySQL的-5.5.10 /数据/ localhost.localdomain.pid
mysql 25819 25566 0 09:45 pts / 2 00:00:00 /data/mysql-5.5.10/bin/mysqld --basedir = / data / mysql-5.5.10 --dadadir = / data / mysql-5.5。 10 / data --plugin-dir = / data / mysql-5.5.10 / lib / plugin --user = mysql --log-error = / data / mysql-5.5.10 / data / localhost.localdomain.err - pid-file = / data / mysql-5.5.10 / data / localhost.localdomain.pid --socket = / data / mysql-5.5.10 / mysql.sock --port = 3306
root 25842 4375 0 09:45 pts / 2 00:00:00 grep mysql
23，[root @ localhost~] #mysqladmin -uroot密码123456
24，[root @ localhost~]＃/ data / mysql-5.5.10 / bin / mysql -uroot -p123456
将*。*上的所有特权授予“123456”标识的root @“％”; 
将*。*上的所有特权授予由“123456”标识的root @“localhost”;
冲洗特权;
25，[root @ localhost~] #export PATH = / data / mysql-5.5.10 / bin：$ PATH >> / etc / profile && source / etc / profile



PHP：
1，[root @ localhost~] #yum -y install libxml2-devel libpng-devel libmcrypt libmcrypt-devel libxslt-devel libcurl-devel libjpeg-devel freetype-devel openldap openldap-devel openssl   openssl-devel
2，[root @ localhost mysql-5.5.10] #cp -frp / usr / lib64 / libldap * / usr / lib /
3，[root @ localhost~] #tar zxvf php-5.5.30.tar.gz
4，[root @ localhost~] #cd php-5.5.30
5，[root @ localhost php-5.5.30]＃。/ configure --prefix = / apps / lib / php-5.5.30 / --with-mysql = mysqlnd --with-mysqli = mysqlnd --with-pdo -mysql = mysqlnd --with-iconv-dir = / usr / local / libiconv --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml- dir = / usr --with-gettext --enable-xml --disable -rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable- mbregex --enable-fpm --enable-mbstring --with-mcrypt --with-gd --enable -gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-soap --enable-short-tags --enable-static --with-xsl --with-ldap --with-fpm-user = product --with-fpm-group = product --enable-ftp --enable-opcache = no
＃上面的--with-的MySQL = /数据/ MySQL的-5.5.1这种编译方式是PHP和数据库安装在一台服务器上时的可以直接执行的MySQL的安装位置，当然也可以采用另外一种方式- -with-的MySQL = mysqlnd，建议不管数据库和PHP是否安装在一台服务器上，都采用--with-的MySQL = mysqlnd这种方式
6，[root @ localhost php-5.5.30] #make && make install
7，[root @ localhost php-5.5.30] #cp php.ini-production /apps/lib/php-5.5.30/lib/php.ini
8，[root @ localhost php-5.5.30] #cd /apps/lib/php-5.5.30/etc/
9，[root @ localhost等] #cp php -fpm.conf.default php-fpm.conf
10，[root @ localhost等] #cp /root/php-5.5.30/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
11，[root @ localhost等] #chmod 755 /etc/init.d/php-fpm
12，[root @ localhost等]＃/ etc / init.d / php -fpm start
启动php-fpm完成
13，[root @ localhost等] #ps -ef | grep php
root 15837 1 0 10:08？00:00:00 php-fpm：主进程（/apps/lib/php-5.5.30/etc/php-fpm.conf）                                                                                
产品15838 15837 0 10:08？00:00:00 php-fpm：pool www                                                                                                                              
产品15839 15837 0 10:08？00:00:00 php-fpm：pool www                                                                                                                              
root 15841 4375 0 10:08 pts / 2 00:00:00 grep php



验证LNMP是否成功：
1，验证PHP
[root @ localhost~] #cat /apps/svr/nginx-1.8.0/html/test.php
<？PHP
的phpinfo（）;
？>











2，验证的MySQL，这种方式数据库和PHP安装在一台机器上测试PHP链接数据库是否成功的方式，因为写的是本地主机，所以必须是PHP和数据库安装在一台服务器上，如果PHP和
数据库分开安装的，则必须要把本地主机改成对应的数据库IP，如果测试不成功，尝试将IP换成127.0.0.1测试

[root @ localhost~] #cat /apps/svr/nginx-1.8.0/html/testdb.php
<？PHP
$ link = mysql_connect（'localhost'，'test'，''）;
if（！$ link）echo“Fail !!!”;
否则回应“成功!!!”;
mysql_close（）;
？>







3，建议不管数据库和PHP是否安装在一台服务器上，都采用--with-mysql = mysqlnd这种方式，zabbix 服务器的安装首先是需要yum -y install mysql-devel ，zabbix的编译才能通过，然后最后配置ZABBIX图形界面和zabbix_server.conf指向时独立部署的MySQL的就服务器行了分开部署时，PHP的编译参数：
./configure --prefix = / apps / lib / php-5.5.30 / --with-mysql = mysqlnd --with-mysqli = mysqlnd --with-pdo-mysql = mysqlnd --with-iconv-dir = / usr / local / libiconv --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir = / usr --with-gettext --enable- xml --disable -rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable -fpm --enable-mbstring - with-mcrypt --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-soap --enable -short-tags --enable-static --with-xsl --with-ldap --with-fpm-user = product --with-fpm-group = product --enable-ftp --enable-opcache = no

同时测试phpinfo和php连接数据库是否成功，如果测试不成功，尝试将IP换成127.0.0.1测试：
[root @ localhost等] #cat /apps/svr/nginx-1.8.0/html/testdb.php
<？PHP
        $ link = mysql_connect（'192.168.10.216'，'root'，'123456'）;
        if（$ link）
                回声“成功......”;
        其他
                回声“失败......”;
        mysql_close（）;
        的phpinfo（）;
？>



ZABBIX - 服务器 - 代理安装：
0，ln -s /data/mysql-5.5.10/lib/libmysqlclient.so.18 / usr / lib64 /＃打包的话需要单独放到一个基础rpm里
1，[root @ localhost~] #yum -y install net-snmp-devel OpenIPMI-devel java-devel curl-devel mysql-devel
2，[root @ localhost~] #tar zxvf zabbix-3.0.10.tar.gz
3，[root @ localhost~] #cd zabbix-3.0.10
4，[root @ localhost zabbix-3.0.10]＃  。/ configure --prefix = / apps / svr / zabbix-3.0.10 --enable-server --enable-proxy --enable-agent --enable-java --with-mysql = mysqlnd --with-mysqli = mysqln --with-net-snmp --with-libcurl --with-openipmi
5，[root @ localhost zabbix-3.0.10] #make && make install
6，
mysql> create database zabbix字符集utf8;
查询OK，1行受影响（0.02秒）

mysql>将zabbix。*上的所有权限授予由'1234'标识的zabbix @'localhost';
查询OK，0行受影响（0.03秒）

mysql>授予zabbix。*的所有权限，以及'1234'标识的zabbix @'％';         
查询正常，0行受影响（0.00秒）

mysql> flush特权;
查询OK，0行受影响（0.01秒）


10，[root @ localhost zabbix-3.0.10] #mysql -uzabbix -p1234 zabbix <database / mysql / schema.sql
11，[root @ localhost zabbix-3.0.10] #mysql -uzabbix -p1234 zabbix <database / mysql / images.sql
12，[root @ localhost zabbix-3.0.10] #mysql -uzabbix -p1234 zabbix <database / mysql / data.sql
13，[root @ localhost zabbix-3.0.10] #cp misc / init.d / fedora / core / zabbix_server /etc/init.d/zabbix_server
14，[root @ localhost zabbix-3.0.10] #cp misc / init.d / fedora / core / zabbix_agentd /etc/init.d/zabbix_agentd 
15，修改两处位置
[root @ localhost zabbix-3.0.8] #grep'BasedIR ='/ etc / init.d / zabbix_server           
        BASEDIR = /应用/ SVR / ZABBIX-3.0.10
[root @ localhost zabbix-3.0.8] #grep'BasedIR ='/ etc / init.d / zabbix_agentd
        BASEDIR = /应用/ SVR / ZABBIX-3.0.10
16，[root @ localhost zabbix-3.0.8] #chmod 755 /etc/init.d/zabbix_server
17，[root @ localhost zabbix-3.0.8] #chmod 755 /etc/init.d/zabbix_agentd
18，[root @ localhost~] #mkdir /apps/svr/zabbix-3.0.10/script/
19，vim /apps/lib/php-5.5.30/lib/php.ini主要为下面几个参数
PHP选项post_max_size 16M
PHP选项max_execution_time 300
PHP选项max_input_time 300
PHP时区亚洲/上海

＃重启PHP
20，[root @ localhost~] #cat /apps/svr/zabbix-3.0.10/etc/zabbix_server.conf
日志文件= / TMP / zabbix_server.log
DBHOST = 127.0.0.1
数据库名= ZABBIX
DBUSER = ZABBIX
DBPASSWORD = 1234
超时= 30
LogSlowQueries = 100
StartPollers = 5
StartPollersUnreachable = 5
StartHTTPPollers = 1
StartTrappers = 1
StartDBSyncers = 1
StartDiscoverers = 5
StartPingers = 5


的CacheSize = 24M
ValueCacheSize = 24M
HistoryCacheSize = 24M
TrendCacheSize = 24M

AlertScriptsPath = /应用程序/ ZABBIX /脚本

21，[root @ localhost~] #chown root.product / var
22，[root @ localhost~] #chown -R root.product / var / lock /
22，[root @ localhost~] #chmod 775 -R / var / lock
23，[root @ localhost~] #su - product -c“/etc/init.d/zabbix_server start”
24，[root @ localhost~] #cd zabbix-3.0.10 / frontends /
25，[root @ localhost frontends] #cp -rf php / * /apps/svr/nginx-1.8.0/html/


26，

27，参考2.0.6的版本方法，下载后，上传到/apps/svr/nginx-1.8.0/html/conf目录下就行了



28，安装成功


29，登录，必须是大写的管理员






30，测试本机
1，[root @ localhost~] #vim /apps/svr/zabbix-3.0.10/etc/zabbix_agentd.conf
2，[root @ localhost conf] #cat /apps/svr/zabbix-3.0.10/etc/zabbix_agentd.conf
主机名=试验-1
服务器= 127.0.0.1,192.168.10.196
日志文件= / TMP / zabbix_agentd.log
包括= /应用/ SVR / ZABBIX-3.0.10的/ etc / zabbix_agentd.conf.d /
超时= 30
3，[root @ localhost conf] #su - product -c“/etc/init.d/zabbix_agentd start”
关闭zabbix_agentd：[确定]
开始zabbix_agentd：[确定]
4，[root @ localhost~]＃/ apps / svr / zabbix-3.0.10 / bin / zabbix_get -s 172.16.40.54 -k agent.ping
1



ZABBIX-agentd安装：
第一种方法，采用源码安装，同样的tar包，只是在./configure只编译agentd
1，[root @ mfschunkserver-1~] #tar zxvf zabbix-3.0.10.tar.gz
2，[root @ mfschunkserver-1 zabbix-3.0.10]＃。/ configure --prefix = / apps / svr / zabbix-3.0.10 --enable-agent
3，[root @ mfschunkserver-1 zabbix-3.0.10] #make && make install
4，[root @ mfschunkserver-1 zabbix-3.0.10] #cp misc / init.d / fedora / core / zabbix_agentd /etc/init.d/
5，[root @ localhost zabbix-3.0.8] #grep'BasedIR ='/ etc / init.d / zabbix_agentd
        BASEDIR = /应用/ SVR / ZABBIX-3.0.10
6，[root @ mfschunkserver-1 zabbix-3.0.10] #chmod 755 /etc/init.d/zabbix_agentd
7，[root @ localhost conf] #cat /apps/svr/zabbix-3.0.10/etc/zabbix_agentd.conf
主机名=试验-1
服务器= 127.0.0.1,192.168.10.196
日志文件= / TMP / zabbix_agentd.log
包括= /应用/ SVR / ZABBIX-3.0.10的/ etc / zabbix_agentd.conf.d /
超时= 30

服务器端测试：

/apps/svr/zabbix-3.0.10/bin/zabbix_get -s 172.16.40.54 -k agent.ping

第二种方法：直接在服务器端，将ZABBIX-agentd所需要的文件全部拷贝到客户端即可
1，[root @ localhost zabbix] #scp -rf bin / root@172.16.40.55:/apps/svr/zabbix-3.0.10/bin/
2，[root @ localhost zabbix] #scp -rf sbin / zabbix_agentd root@172.16.40.55:/apps/svr/zabbix-3.0.10/sbin/
3，[root @ localhost zabbix] #scp -rf etc / zabbix_agentd.conf * root@172.16.40.55:/apps/svr/zabbix-3.0.10/etc/




中文支持：
更换语言后，图形会出现乱码，我们做如下修改即可。

1，修改你的/apps/svr/nginx-1.8.0/html/include/defines.inc.php这个文件

＃修改第93行
define（'ZBX_FONT_NAME'，'msyh'）;
＃修改第45行改为
define（'ZBX_GRAPH_FONT_NAME'，'msyh'）

2，然后下载微软雅黑字体，改名为msyh传入/apps/svr/nginx-1.8.0/html/fonts/目录下即可。

3，修改权限，与其他的文件权限一直

如图4所示，如果还是不行，执行下面命令
mv / data / svr / nginx / html / fonts / msyh /data/svr/nginx/html/fonts/msyh.ttf





























